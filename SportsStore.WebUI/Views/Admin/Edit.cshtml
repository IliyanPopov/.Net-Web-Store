@model SportsStore.WebUI.ViewModels.ProductEditViewModel
@{
    ViewBag.Title = "Admin: Edit " + Model.Name;
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel">
    <div class="panel-heading">
        <h3>Edit @Model.Name</h3>
    </div>
    @using (Html.BeginForm("Edit", "Admin", FormMethod.Post, new {enctype = "multipart/form-data"}))
    {
        <div class="panel-body">
            @Html.HiddenFor(m => m.ProductId)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                if (property.PropertyName != "ProductId" && property.PropertyName != "CategoryId" && property.PropertyName != "Categories")
                {
                    switch (property.PropertyName)
                    {
                        case "ProductID":
                        case "ImageData":
                        case "ImageMimeType":
                            // do nothing
                            break;
                        default:
                            <div class="form-group">
                                <label>
                                    @(property.DisplayName ??
                                      property.PropertyName)
                                </label>
                                @if (property.PropertyName == "Description")
                                {
                                    @Html.TextArea(property.PropertyName, null,
                                        new {@class = "form-control", rows = 5})
                                }
                                else
                                {
                                    @Html.TextBox(property.PropertyName, null,
                                        new {@class = "form-control"})
                                }
                                @Html.ValidationMessage(property.PropertyName)
                            </div>
                            break;
                    }
                }
            }
            
            <div class="form-group">
                @Html.LabelFor(m => m.CategoryId)
                <div class="dropdown">
                    @Html.DropDownListFor(m => m.CategoryId,
                        new SelectList(Model.Categories, "CategoryId", "Name", Model.CategoryId),
                        new { @class = "form-control col-sm-12" })
                </div>
            </div>

            <div class="form-group">
                <div style="position: relative;">
                    <label>Image</label>
                    <a class='btn' href='javascript:;'>
                        Choose File...
                        <input type="file" name="Image" size="40"
                               style="background-color: transparent; color: transparent; filter: alpha(opacity=0); left: 0; opacity: 0; position: absolute; top: 0; z-index: 2;"
                               onchange='$("#upload-fileinfo").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info">
                    </span>
                </div>
                @if (Model.ImageData == null)
                {
                    <div class="form-control-static">No Image</div>
                }
                else
                {
                    <img class="img-thumbnail" width="150" height="150"
                         src="@Url.Action("GetImage", "Product",
                                  new {Model.ProductId})"/>
                }
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary"/>
            @Html.ActionLink("Cancel and return to List", "Index", null,
                new
                {
                    @class = "btn btn-default"
                })
        </div>
    }

</div>